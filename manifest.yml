appVersion: latest
type: install
id: rocket-chat-modern
version: 1.8 # Incremented JPS version
name: Rocket.Chat (Modern) # Updated name
baseUrl: https://raw.githubusercontent.com/HameemDakheel/rocket-chat/master
logo: /images/rocket.png?_r=${fn.random}
homepage: https://rocket.chat/

globals:
  db_password: ${fn.password}
  rocket_chat_version: "latest" # <-- 1. Rocket.Chat version updated
  mongo_image: mongo:7.0.21-jammy


categories:
- apps/dev-and-admin-tools
- apps/collaboration


nodes:
- cloudlets: 16
  nodeGroup: cp
  image: rocket.chat:${globals.rocket_chat_version} # <-- Uses new RC version
  links: nosqldb:db
  startServiceOnCreation: true # Can start immediately now

# --- 3. MongoDB section completely replaced ---
- cloudlets: 16
  nodeGroup: nosqldb
  image: ${globals.mongo_image}
  password: ${globals.db_password}
# --- End of MongoDB section ---

onInstall:
  - adjust-env-vars
  - api: env.control.ExecDockerRunCmd
    nodeId: ${nodes.cp.first.id}
  - cmd[cp]: while [[ $(curl -o /dev/null -s -w "%{http_code}\n" http://127.0.0.1:3000) != 200 ]] ; do sleep 3; done

# --- 4. Simplified lifecycle hooks ---
# onAfterClone is still useful for cloned environments
onAfterClone:
  - adjust-env-vars

# onAfterStart is removed as it was only for the replica set health check.
onAfterStart:
  - cmd [${nodes.nosqldb.first.id}]: |-
      counter=0
      while true
      do
        counter=$((counter+1))
        resp=$(mongo -u admin -p ${globals.db_password} admin --eval 'rs.status()')
        [[ $resp == *"health\" : 0"* ]] && { sleep 3; } || { echo "cluster is configured"; exit 0; }
        [[ "$counter" -gt 10 ]] && { echo "cluster is not configured"; exit 0; }
      done
  - if (response.out == "cluster is not configured"):
      script: |-
        return {
          result: 2,
          type: "warning",
          message: "Mongo cluster is not configured. Please check cluster configuration. [More details](https://jelastic.com/blog/mongodb-auto-clustering/)"
        };
  - cmd [cp]: |-
      service jelinit restart
      while [[ $(curl -o /dev/null -s -w "%{http_code}\n" http://127.0.0.1:3000) != 200 ]] ; do sleep 3; done

actions:
  adjust-env-vars:
    api[cp]: env.control.AddContainerEnvVars
    vars:
      # --- 5. Simplified Connection Strings ---
      ROOT_URL: http://${env.domain}
      JELASTIC_EXPOSE: 3000
      # MONGO_OPLOG_URL is deprecated in newer Rocket.Chat versions
      MONGO_URL: "mongodb://admin:${globals.db_password}@${nodes.nosqldb.first.address}:27017/rocketchat?authSource=admin"

success: /texts/success.md