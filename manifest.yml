type: install
id: rocket-chat-persistent
version: 2.3 # Version incremented
name: Rocket.Chat

globals:
  db_password: ${fn.password}
  rocket_chat_version: "latest"
  mongo_image: mongo:7.0.21-jammy

nodes:
  - nodeType: docker
    nodeGroup: cp
    image: rocket.chat:${globals.rocket_chat_version}
    cloudlets: 16
    links: nosqldb:db
    startServiceOnCreation: true
    env:
      PORT: 3000

  - nodeType: docker
    nodeGroup: nosqldb
    image: ${globals.mongo_image}
    cloudlets: 16
    startServiceOnCreation: true
    env:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${globals.db_password}
      MONGO_INITDB_DATABASE: meteor

onInstall:
  - adjust-env-vars

  - api [cp]: env.control.RestartNodes # <<< CORRECTED
  - api: env.control.ExecDockerRunCmd
    nodeId: ${nodes.cp.first.id}
  - cmd[cp]: |-
      echo "Waiting for Rocket.Chat..."
      while [[ $(curl -o /dev/null -s -w "%{http_code}\n" http://127.0.0.1:3000) != 200 ]]; do sleep 5; done
      echo "Rocket.Chat is running!"

actions:
  adjust-env-vars:
    api[cp]: env.control.AddContainerEnvVars
    vars:
      ROOT_URL: http://${env.domain}
      MONGO_URL: "mongodb://admin:${globals.db_password}@${nodes.nosqldb.first.address}:27017/meteor?authSource=admin"

success:
  text: |
    ## Rocket.Chat Installation Successful!

    Your corrected Rocket.Chat environment with persistent storage for uploads is up and running.